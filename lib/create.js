// Node.js
//----------------------------------------------------------------------------
// Main scoffolding routine.
//----------------------------------------------------------------------------

const prompt = require('prompt');
const shell = require('shelljs');
const fs = require('fs');

prompt.message = "Replace";
prompt.colors = false;

/*
 * Command function
 */

module.exports = (args, options, logger) => {
  const variant = options.variant || 'default';
  const templatePath = `${__dirname}/../templates/${args.template}/${variant}`;
  const destPath = args.dir.startsWith('/') ? args.dir : process.cwd()+'/'+args.dir;

  /*
   * Copy Template
   */

  if (!fs.existsSync(templatePath)) {
    logger.error(`The requested template for ${args.template} wasn’t found.`)
    process.exit(1);
  }

  if (!fs.exists(destPath))
    shell.mkdir('-p', destPath);

  logger.info('Copying files…');
  shell.cp('-r', `${templatePath}/*`, destPath);
  shell.cp('-r', `${templatePath}/.*`, destPath);
  logger.info('✔ The files have been copied!');

  /*
   * File variables
   */


  const variables = require(`${templatePath}/_variables`);

  // Remove variables file from the current directory
  // since it only is needed on the template directory
  if (fs.existsSync(`${destPath}/_variables.js`)) {
    shell.rm(`${destPath}/_variables.js`);
  }

  logger.info('Please fill the following values…');

  // Ask for variable values
  prompt.start().get(variables, (err, result) =>
  {
    // Copy license file accross if one is specified. Other wise default it to
    // UNLICENSED.
    if (result.license)
    {
      if (fs.existsSync(`${__dirname}/../licenses/${result.license.toUpperCase()}`)) {
        shell.cp(`${__dirname}/../licenses/${result.license.toUpperCase()}`, `${destPath}/LICENSE`);
      }
      else
      {
        logger.info(`No license found for ${license}`);
      }
    }
    else
      result.license = "UNLICENSED";


    // Replace variable values in all files
    shell.ls('-Rl', destPath).forEach(entry => {
      if (entry.isFile()) {
        // Replace '[VARIABLE]` with the corresponding variable value from the prompt
        for (variable in result) {
          shell.sed('-i', `\\[${variable.toUpperCase()}\\]`, result[variable], destPath+'/'+entry.name);
        }

        // Insert current year in files
        shell.sed('-i', '\\[YEAR\\]', new Date().getFullYear(), destPath+'/'+entry.name);
      }
    });

    logger.info('✔ Success!');
  });
}

//----------------------------------------------------------------------------
// Derived (modified) from code generated by Sitepoint.
// Copyright (C) 2017 Jaypha
// LICENSE: MIT
// Authors: Jason den Dulk
//
